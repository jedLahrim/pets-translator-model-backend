name: Deploy Flask Backend to Contabo

on:
  push:
    branches: [ master ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install sshpass
        run: sudo apt-get install -y sshpass

      - name: Deploy to Contabo
        env:
          SERVER_IP: ${{ secrets.SERVER_IP }}
          SERVER_USER: ${{ secrets.SERVER_USER }}
          SERVER_PASSWORD: ${{ secrets.SERVER_PASSWORD }}
          GIT_USERNAME: ${{ secrets.GIT_USERNAME }}
          GIT_PASSWORD: ${{ secrets.GIT_PASSWORD }}
        run: |
          sshpass -p "$SERVER_PASSWORD" ssh -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "
            # Update package lists
            apt-get update -y &&

            # Install Python and pip if not installed
            if ! command -v python3 &> /dev/null; then
              apt-get install -y python3 python3-pip python3-venv git
            fi &&

            # Install system dependencies for audio processing
            apt-get install -y ffmpeg libsndfile1 &&

            # Navigate to project directory
            mkdir -p /root &&
            cd /root &&

            # Clone repository if it doesn't exist
            if [ ! -d pet-speak-flask-backend ]; then
              git clone https://$GIT_USERNAME:$GIT_PASSWORD@github.com/${GITHUB_REPOSITORY}.git pet-speak-flask-backend &&
              cd pet-speak-flask-backend
            else
              cd pet-speak-flask-backend &&
              git pull https://$GIT_USERNAME:$GIT_PASSWORD@github.com/${GITHUB_REPOSITORY}.git master
            fi &&

            # Create virtual environment if it doesn't exist
            if [ ! -d venv ]; then
              python3 -m venv venv
            fi &&

            # Activate virtual environment and install dependencies
            source venv/bin/activate &&
            pip install --upgrade pip &&
            pip install -r requirements.txt &&
            pip install gunicorn &&

            # Make upload directory
            mkdir -p temp_uploads &&
            chmod 777 temp_uploads &&

            # Setup systemd service for Flask app
            echo '[Unit]
            Description=Pet Speak Flask Backend
            After=network.target

            [Service]
            User=root
            WorkingDirectory=/root/pet-speak-flask-backend
            Environment=\"PATH=/root/pet-speak-flask-backend/venv/bin\"
            ExecStart=/root/pet-speak-flask-backend/venv/bin/gunicorn --workers 4 --bind 0.0.0.0:5000 main:app

            [Install]
            WantedBy=multi-user.target' > /etc/systemd/system/pet-speak-flask.service &&

            # Reload systemd, enable and restart the service
            systemctl daemon-reload &&
            systemctl enable pet-speak-flask &&
            systemctl restart pet-speak-flask &&

            # Optional: Set up Nginx as reverse proxy if needed
            if ! command -v nginx &> /dev/null; then
              apt-get install -y nginx
            fi &&

            echo 'server {
                listen 80;
                server_name _;

                location / {
                    proxy_pass http://127.0.0.1:5000;
                    proxy_set_header Host \$host;
                    proxy_set_header X-Real-IP \$remote_addr;
                    proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
                    proxy_set_header X-Forwarded-Proto \$scheme;
                    client_max_body_size 30M;
                }
            }' > /etc/nginx/sites-available/pet-speak-flask &&

            ln -sf /etc/nginx/sites-available/pet-speak-flask /etc/nginx/sites-enabled/ &&
            rm -f /etc/nginx/sites-enabled/default &&
            systemctl restart nginx
          "