name: Deploy Flask to Contabo

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install sshpass
        run: sudo apt-get install -y sshpass

      - name: Deploy to Contabo
        env:
          SERVER_IP: ${{ secrets.SERVER_IP }}
          SERVER_USER: ${{ secrets.SERVER_USER }}
          SERVER_PASSWORD: ${{ secrets.SERVER_PASSWORD }}
          GIT_USERNAME: ${{ secrets.GIT_USERNAME }}
          GIT_PASSWORD: ${{ secrets.GIT_PASSWORD }}
        run: |
          sshpass -p "$SERVER_PASSWORD" ssh -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "
            # Enable error logging
            set -x

            # Update system packages
            apt-get update -y
            apt-get upgrade -y

            # Install required dependencies
            apt-get install -y python3 python3-pip python3-venv git ffmpeg libsndfile1 nginx

            # Navigate to root directory
            mkdir -p /root
            cd /root

            # Clone or update repository
            if [ ! -d pet-speak-flask-backend ]; then
              git clone https://$GIT_USERNAME:$GIT_PASSWORD@github.com/${GITHUB_REPOSITORY}.git pet-speak-flask-backend
            else
              cd pet-speak-flask-backend
              git pull https://$GIT_USERNAME:$GIT_PASSWORD@github.com/${GITHUB_REPOSITORY}.git main
              cd ..
            fi

            cd pet-speak-flask-backend

            # Create fresh virtual environment
            rm -rf venv
            python3 -m venv venv
            source venv/bin/activate

            # Install Python dependencies
            pip install --upgrade pip
            pip install -r requirements.txt
            pip install gunicorn

            # Create uploads directory
            mkdir -p temp_uploads
            chmod 777 temp_uploads

            # Install PM2 if not exists
            if ! command -v pm2 &> /dev/null; then
              npm install -g pm2
            fi

            # Restart Flask app via PM2
            pm2 delete pet-speak-flask || true
            pm2 start venv/bin/gunicorn --name pet-speak-flask -- --bind 0.0.0.0:5000 --workers 4 main:app
            pm2 save

            # Configure Nginx
            echo 'server {
                listen 80;
                server_name _;

                location /api/flask/ {
                    proxy_pass http://127.0.0.1:5000/;
                    proxy_set_header Host \$host;
                    proxy_set_header X-Real-IP \$remote_addr;
                    proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
                    proxy_set_header X-Forwarded-Proto \$scheme;
                    client_max_body_size 30M;
                }

                location / {
                    proxy_pass http://127.0.0.1:3000;
                    proxy_set_header Host \$host;
                    proxy_set_header X-Real-IP \$remote_addr;
                    proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
                    proxy_set_header X-Forwarded-Proto \$scheme;
                }
            }' > /etc/nginx/sites-available/pet-speak

            # Enable Nginx config
            ln -sf /etc/nginx/sites-available/pet-speak /etc/nginx/sites-enabled/
            rm -f /etc/nginx/sites-enabled/default
            systemctl restart nginx

            # Verify services
            echo 'Deployment complete. Checking services:'
            pm2 list
            systemctl status nginx
            curl -v http://localhost/api/flask/
          "
